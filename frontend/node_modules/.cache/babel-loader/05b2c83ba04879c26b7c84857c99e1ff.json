{"ast":null,"code":"var _jsxFileName = \"/Users/casey/Documents/Projects/CaseyHirdCoinExchange/frontend/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Table from \"Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    };\n  }\n\n  formatRows() {\n    let buy_rows = [];\n    let sell_rows = [];\n\n    for (const coin of this.state.coins) {\n      let b_row = [coin.ticker];\n      let s_row = [coin.ticker];\n\n      for (const [key, value] of Object.entries(coin.buy_prices)) {\n        b_row.push(value);\n      }\n\n      for (const [key, value] of Object.entries(coin.sell_prices)) {\n        s_row.push(value);\n      }\n\n      buy_rows.push(b_row);\n      sell_rows.push(s_row);\n    }\n\n    return [buy_rows, sell_rows];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/coinexchange\").then(res => res.json()).then(res => {\n      this.setState({\n        exchanges: res[0],\n        coins: res[1],\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    let buy_rows = [];\n    let sell_rows = [];\n\n    if (this.state.loaded) {\n      [buy_rows, sell_rows] = this.formatRows();\n      console.log(\"buy rows: \");\n      console.log(buy_rows);\n      console.log(\"sell rows: \");\n      console.log(sell_rows);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        title: \"Buy Prices\",\n        exchanges: this.state.exchanges,\n        rows: buy_rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), buy_rows, sell_rows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/casey/Documents/Projects/CaseyHirdCoinExchange/frontend/src/App.js"],"names":["React","Table","App","Component","constructor","props","state","loaded","formatRows","buy_rows","sell_rows","coin","coins","b_row","ticker","s_row","key","value","Object","entries","buy_prices","push","sell_prices","componentDidMount","fetch","then","res","json","setState","exchanges","render","console","log"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,MAAMC,IAAX,IAAmB,KAAKL,KAAL,CAAWM,KAA9B,EAAqC;AACnC,UAAIC,KAAK,GAAG,CAACF,IAAI,CAACG,MAAN,CAAZ;AACA,UAAIC,KAAK,GAAG,CAACJ,IAAI,CAACG,MAAN,CAAZ;;AACA,WAAK,MAAM,CAACE,GAAD,EAAKC,KAAL,CAAX,IAA0BC,MAAM,CAACC,OAAP,CAAeR,IAAI,CAACS,UAApB,CAA1B,EAA2D;AACzDP,QAAAA,KAAK,CAACQ,IAAN,CAAWJ,KAAX;AACD;;AACD,WAAK,MAAM,CAACD,GAAD,EAAKC,KAAL,CAAX,IAA0BC,MAAM,CAACC,OAAP,CAAeR,IAAI,CAACW,WAApB,CAA1B,EAA4D;AAC1DP,QAAAA,KAAK,CAACM,IAAN,CAAWJ,KAAX;AACD;;AACDR,MAAAA,QAAQ,CAACY,IAAT,CAAcR,KAAd;AACAH,MAAAA,SAAS,CAACW,IAAV,CAAeN,KAAf;AACD;;AACD,WAAO,CAACN,QAAD,EAAWC,SAAX,CAAP;AACD;;AAEDa,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKC,GAAD,IAAS;AACP,WAAKE,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEH,GAAG,CAAC,CAAD,CADF;AAEZd,QAAAA,KAAK,EAAEc,GAAG,CAAC,CAAD,CAFE;AAGZnB,QAAAA,MAAM,EAAE;AAHI,OAAd;AAKD,KATL;AAWD;;AAEDuB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAjB;AACA,QAAIG,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAI,KAAKJ,KAAL,CAAWC,MAAf,EAAuB;AACvB,OAACE,QAAD,EAAWC,SAAX,IAAwB,KAAKF,UAAL,EAAxB;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYvB,QAAZ;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYtB,SAAZ;AACD;;AACC,wBACE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,YAAb;AAA0B,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWuB,SAAhD;AAA2D,QAAA,IAAI,EAAEpB;AAAjE;AAAA;AAAA;AAAA;AAAA,cADF,EAEIA,QAFJ,EAGIC,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA3D+B;;AA+DlC,eAAeR,GAAf","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport Table from \"Table\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false\n    };\n  }\n\n  formatRows() {\n    let buy_rows = [];\n    let sell_rows = [];\n    for (const coin of this.state.coins) {\n      let b_row = [coin.ticker];\n      let s_row = [coin.ticker];\n      for (const [key,value] of Object.entries(coin.buy_prices)) {\n        b_row.push(value);\n      }\n      for (const [key,value] of Object.entries(coin.sell_prices)) {\n        s_row.push(value);\n      }\n      buy_rows.push(b_row);\n      sell_rows.push(s_row);\n    }\n    return [buy_rows, sell_rows];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/coinexchange\")\n    .then(res => res.json())\n    .then(\n        (res) => {\n          this.setState({\n            exchanges: res[0],\n            coins: res[1],\n            loaded: true\n          });\n        }\n    );\n  }\n\n  render() {\n    console.log(this.state);\n    let buy_rows = []\n    let sell_rows = []\n    if (this.state.loaded) {\n    [buy_rows, sell_rows] = this.formatRows();\n    console.log(\"buy rows: \");\n    console.log(buy_rows);\n    console.log(\"sell rows: \");\n    console.log(sell_rows);\n  }\n    return (\n      <div>\n        <Table title=\"Buy Prices\" exchanges={this.state.exchanges} rows={buy_rows} />\n        { buy_rows }\n        { sell_rows }\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}