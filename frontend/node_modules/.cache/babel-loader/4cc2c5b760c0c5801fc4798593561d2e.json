{"ast":null,"code":"var _jsxFileName = \"/Users/casey/Documents/Projects/CaseyHirdCoinExchange/frontend/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Table from \"./components/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    };\n  }\n\n  formatRows() {\n    let buy_rows = [];\n    let sell_rows = [];\n    let rec_rows = [];\n    let exchanges = [\"\"];\n    let first_coin = true;\n\n    for (const coin of this.state.coins) {\n      let b_row = [coin.ticker];\n      let s_row = [coin.ticker];\n      let r_row = [coin.ticker];\n\n      for (const [key, value] of Object.entries(coin.buy_prices)) {\n        b_row.push(value);\n\n        if (first_coin) {\n          exchanges.push(key);\n        }\n      }\n\n      for (const [key, value] of Object.entries(coin.sell_prices)) {\n        s_row.push(value);\n      }\n\n      r_row.push(coin.buy_rec);\n      r_row.push(coin.sell_rec);\n      buy_rows.push(b_row);\n      sell_rows.push(s_row);\n      rec_rows.push(r_row);\n    }\n\n    return [exchanges, buy_rows, sell_rows, rec_rows];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/coinexchange\").then(res => res.json()).then(res => {\n      this.setState({\n        coins: res[1],\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    let exchanges = [];\n    let buy_rows = [];\n    let sell_rows = [];\n    let rec_rows = [];\n    const rec_headers = [\"Buy\", \"Sell\"];\n\n    if (this.state.loaded) {\n      [exchanges, buy_rows, sell_rows, rec_rows] = this.formatRows();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          title: \"Buy Prices\",\n          exchanges: exchanges,\n          rows: buy_rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          title: \"Sell Prices\",\n          exchanges: exchanges,\n          rows: sell_rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          title: \"Recommendations\",\n          exchanges: rec_headers,\n          rows: rec_rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    } else {\n      return \"Loading...\";\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/casey/Documents/Projects/CaseyHirdCoinExchange/frontend/src/App.js"],"names":["React","Table","App","Component","constructor","props","state","loaded","formatRows","buy_rows","sell_rows","rec_rows","exchanges","first_coin","coin","coins","b_row","ticker","s_row","r_row","key","value","Object","entries","buy_prices","push","sell_prices","buy_rec","sell_rec","componentDidMount","fetch","then","res","json","setState","render","console","log","rec_headers"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport Table from \"./components/Table\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false\n    };\n  }\n\n  formatRows() {\n    let buy_rows = [];\n    let sell_rows = [];\n    let rec_rows = [];\n    let exchanges = [\"\"];\n    let first_coin = true;\n    for (const coin of this.state.coins) {\n      let b_row = [coin.ticker];\n      let s_row = [coin.ticker];\n      let r_row = [coin.ticker];\n      for (const [key,value] of Object.entries(coin.buy_prices)) {\n        b_row.push(value);\n        if (first_coin) {\n          exchanges.push(key);\n        }\n      }\n      for (const [key,value] of Object.entries(coin.sell_prices)) {\n        s_row.push(value);\n      }\n      r_row.push(coin.buy_rec);\n      r_row.push(coin.sell_rec);\n\n      buy_rows.push(b_row);\n      sell_rows.push(s_row);\n      rec_rows.push(r_row);\n    }\n    return [exchanges, buy_rows, sell_rows, rec_rows];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/coinexchange\")\n    .then(res => res.json())\n    .then(\n        (res) => {\n          this.setState({\n            coins: res[1],\n            loaded: true\n          });\n        }\n    );\n  }\n\n  render() {\n    console.log(this.state);\n    let exchanges = [];\n    let buy_rows = []\n    let sell_rows = []\n    let rec_rows = []\n    const rec_headers = [\"Buy\", \"Sell\"]\n    if (this.state.loaded) {\n      [exchanges, buy_rows, sell_rows, rec_rows] = this.formatRows();\n      return (\n        <div>\n          <Table title=\"Buy Prices\" exchanges={exchanges} rows={buy_rows} />\n          <Table title=\"Sell Prices\" exchanges={exchanges} rows={sell_rows} />\n          <Table title=\"Recommendations\" exchanges={rec_headers} rows={rec_rows} />\n        </div>\n      );\n    } else {\n      return(\"Loading...\")\n    }\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}